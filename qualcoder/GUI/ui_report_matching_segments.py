# Form implementation generated from reading ui file 'ui_report_matching_segments.ui'
#
# Created by: PyQt6 UI code generator 6.5.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_DialogMatchingTextSegments(object):
    def setupUi(self, DialogMatchingTextSegments):
        DialogMatchingTextSegments.setObjectName("DialogMatchingTextSegments")
        DialogMatchingTextSegments.setWindowModality(QtCore.Qt.WindowModality.NonModal)
        DialogMatchingTextSegments.resize(989, 580)
        self.verticalLayout = QtWidgets.QVBoxLayout(DialogMatchingTextSegments)
        self.verticalLayout.setContentsMargins(1, 1, 1, 1)
        self.verticalLayout.setSpacing(1)
        self.verticalLayout.setObjectName("verticalLayout")
        self.groupBox = QtWidgets.QGroupBox(parent=DialogMatchingTextSegments)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox.sizePolicy().hasHeightForWidth())
        self.groupBox.setSizePolicy(sizePolicy)
        self.groupBox.setMinimumSize(QtCore.QSize(0, 100))
        self.groupBox.setMaximumSize(QtCore.QSize(16777215, 100))
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")
        self.comboBox_coders = QtWidgets.QComboBox(parent=self.groupBox)
        self.comboBox_coders.setGeometry(QtCore.QRect(450, 30, 200, 26))
        self.comboBox_coders.setObjectName("comboBox_coders")
        self.label_title = QtWidgets.QLabel(parent=self.groupBox)
        self.label_title.setGeometry(QtCore.QRect(10, -1, 291, 31))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_title.setFont(font)
        self.label_title.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignTop)
        self.label_title.setWordWrap(True)
        self.label_title.setObjectName("label_title")
        self.label_coder = QtWidgets.QLabel(parent=self.groupBox)
        self.label_coder.setGeometry(QtCore.QRect(340, 28, 109, 28))
        self.label_coder.setObjectName("label_coder")
        self.pushButton_export = QtWidgets.QPushButton(parent=self.groupBox)
        self.pushButton_export.setGeometry(QtCore.QRect(700, 27, 32, 32))
        self.pushButton_export.setText("")
        self.pushButton_export.setObjectName("pushButton_export")
        self.pushButton_run = QtWidgets.QPushButton(parent=self.groupBox)
        self.pushButton_run.setGeometry(QtCore.QRect(660, 27, 32, 32))
        self.pushButton_run.setText("")
        self.pushButton_run.setObjectName("pushButton_run")
        self.label_include = QtWidgets.QLabel(parent=self.groupBox)
        self.label_include.setGeometry(QtCore.QRect(340, 0, 111, 26))
        self.label_include.setObjectName("label_include")
        self.lineEdit_include = QtWidgets.QLineEdit(parent=self.groupBox)
        self.lineEdit_include.setGeometry(QtCore.QRect(450, 2, 201, 26))
        self.lineEdit_include.setObjectName("lineEdit_include")
        self.label_instructions = QtWidgets.QLabel(parent=self.groupBox)
        self.label_instructions.setGeometry(QtCore.QRect(5, 24, 331, 71))
        self.label_instructions.setWordWrap(True)
        self.label_instructions.setObjectName("label_instructions")
        self.checkBox_any_matches = QtWidgets.QCheckBox(parent=self.groupBox)
        self.checkBox_any_matches.setGeometry(QtCore.QRect(340, 63, 621, 31))
        self.checkBox_any_matches.setObjectName("checkBox_any_matches")
        self.checkBox_one_line = QtWidgets.QCheckBox(parent=self.groupBox)
        self.checkBox_one_line.setGeometry(QtCore.QRect(680, 70, 161, 20))
        self.checkBox_one_line.setObjectName("checkBox_one_line")
        self.verticalLayout.addWidget(self.groupBox)
        self.groupBox_2 = QtWidgets.QGroupBox(parent=DialogMatchingTextSegments)
        self.groupBox_2.setTitle("")
        self.groupBox_2.setObjectName("groupBox_2")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox_2)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setSpacing(0)
        self.gridLayout.setObjectName("gridLayout")
        self.splitter = QtWidgets.QSplitter(parent=self.groupBox_2)
        self.splitter.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.splitter.setObjectName("splitter")
        self.splitter_vert = QtWidgets.QSplitter(parent=self.splitter)
        self.splitter_vert.setOrientation(QtCore.Qt.Orientation.Vertical)
        self.splitter_vert.setObjectName("splitter_vert")
        self.listWidget_files = QtWidgets.QListWidget(parent=self.splitter_vert)
        self.listWidget_files.setObjectName("listWidget_files")
        self.treeWidget = QtWidgets.QTreeWidget(parent=self.splitter_vert)
        self.treeWidget.setObjectName("treeWidget")
        self.treeWidget.headerItem().setText(0, "Code Tree")
        self.tableWidget = QtWidgets.QTableWidget(parent=self.splitter)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setRowCount(0)
        self.gridLayout.addWidget(self.splitter, 0, 0, 1, 1)
        self.verticalLayout.addWidget(self.groupBox_2)

        self.retranslateUi(DialogMatchingTextSegments)
        QtCore.QMetaObject.connectSlotsByName(DialogMatchingTextSegments)
        DialogMatchingTextSegments.setTabOrder(self.comboBox_coders, self.pushButton_run)
        DialogMatchingTextSegments.setTabOrder(self.pushButton_run, self.pushButton_export)
        DialogMatchingTextSegments.setTabOrder(self.pushButton_export, self.listWidget_files)
        DialogMatchingTextSegments.setTabOrder(self.listWidget_files, self.treeWidget)

    def retranslateUi(self, DialogMatchingTextSegments):
        _translate = QtCore.QCoreApplication.translate
        DialogMatchingTextSegments.setWindowTitle(_translate("DialogMatchingTextSegments", "Report matching text segments"))
        self.comboBox_coders.setToolTip(_translate("DialogMatchingTextSegments", "<html><head/><body><p>Select coder. Blank for all.</p></body></html>"))
        self.label_title.setToolTip(_translate("DialogMatchingTextSegments", "<html><head/><body><p><br/></p></body></html>"))
        self.label_title.setText(_translate("DialogMatchingTextSegments", "<html><head/><body><p>Exact match text segments report</p></body></html>"))
        self.label_coder.setToolTip(_translate("DialogMatchingTextSegments", "<html><head/><body><p>Select coder. Blank for all</p></body></html>"))
        self.label_coder.setText(_translate("DialogMatchingTextSegments", "Coder"))
        self.pushButton_export.setToolTip(_translate("DialogMatchingTextSegments", "<html><head/><body><p>Export Excel file</p></body></html>"))
        self.pushButton_run.setToolTip(_translate("DialogMatchingTextSegments", "<html><head/><body><p>Run</p></body></html>"))
        self.label_include.setToolTip(_translate("DialogMatchingTextSegments", "<html><head/><body><p>Coded text must include the text here.</p></body></html>"))
        self.label_include.setText(_translate("DialogMatchingTextSegments", "Include text"))
        self.label_instructions.setText(_translate("DialogMatchingTextSegments", "Select file(s), coder, 2 or more codes. Can exclude results by excluding a code (right click on code)."))
        self.checkBox_any_matches.setText(_translate("DialogMatchingTextSegments", "Unchecked - all selected codes must match exactly.\n"
"Checked - any selected codes must match exactly."))
        self.checkBox_one_line.setToolTip(_translate("DialogMatchingTextSegments", "<html><head/><body><p>Matching exact coded text for multiple codes are collated into one line.</p></body></html>"))
        self.checkBox_one_line.setText(_translate("DialogMatchingTextSegments", "One line results"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    DialogMatchingTextSegments = QtWidgets.QDialog()
    ui = Ui_DialogMatchingTextSegments()
    ui.setupUi(DialogMatchingTextSegments)
    DialogMatchingTextSegments.show()
    sys.exit(app.exec())
